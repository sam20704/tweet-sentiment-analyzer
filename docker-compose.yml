# version: '3.8'   # <--- REMOVED: Obsolete in Docker Compose V2

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: sentiment_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      # Wait until Postgres is ready to accept connections
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/sentiment_db
      - PYTHONUNBUFFERED=1
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app # For local development. Remove for production if not desired.
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s
    networks:
      - app-network
    command: >
      bash -c "while ! </dev/tcp/db/5432; do sleep 1; done; 
      uvicorn main:app --host 0.0.0.0 --port 8000 --reload"

  frontend:
    build: ./frontend
    ports:
      - "8501:8501"
    environment:
      - BACKEND_URL=http://backend:8000
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./frontend:/app # For local development. Remove for production if not desired.
    healthcheck:
      # _stcore/health is the best endpoint for Streamlit; fallback to / if needed
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge